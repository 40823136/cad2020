var tipuesearch = {"pages": [{'title': 'skr skr', 'text': '\n', 'tags': '', 'url': 'skr skr.html'}, {'title': 'Week1-2', 'text': '', 'tags': '', 'url': 'Week1-2.html'}, {'title': '個人', 'text': '\n ON SHAPE \n \xa0 onshape圖檔 \n 體積對照表 \n \n \n \n', 'tags': '', 'url': '個人.html'}, {'title': '分組', 'text': '\n \n \n \n', 'tags': '', 'url': '分組.html'}, {'title': '網頁製作過程', 'text': '1. 下載\xa0 fall2020_cp.7z \xa0 解壓縮到自己的tmp裡面 \n 2.搜尋 git windows找portable git下載到portable git 資料夾 \n \n 3.修改start.bat,save 關掉重開 \n \n 4.建cad2020倉儲 \n 5.git clone 自己的倉儲網址:git clone  https://github.com/40823136/cad2020.git \n 6再來要把遠端的倉儲丟到近端名稱叫 cmsimde: \n git submodule add https://github.com/mdecourse/cmsimde.git cmsimde 7.cmsimde中up_diry資料丟到cad2020 8.最後安裝這些 \n pip install flask flask_cors lxml bs4 markdown pelican leo \n', 'tags': '', 'url': '網頁製作過程.html'}, {'title': 'Week3', 'text': '中秋連假 \n \n', 'tags': '', 'url': 'Week3.html'}, {'title': 'Week4', 'text': 'pdf2-1 \n \n \n \n \n pdf2-2 \n \n \n \n pdf2-3 \n \n \n \n \n pdf2-4 \n \n \n \n \n', 'tags': '', 'url': 'Week4.html'}, {'title': 'Week7', 'text': '', 'tags': '', 'url': 'Week7.html'}, {'title': '利用 SciTE 編輯器類解譯 ANSI C 程式', 'text': '先下載 fall2020_v2.7z 解壓縮到c:/tmp \n 把tcc跟gnuplot放到c:/fall2020_v2/data 裡面 \n \n 接著必須將 y:\\tcc\\ 放入隨身系統中的 path 命令搜尋路徑中,修改start.bat \n \n 修改完關掉並重新啟動start.bat \n 修改 SciTE 編輯器中的 cpp.properties, 讓 Tools -> Go 可以呼叫 tcc.exe 類解譯編輯器中副檔名為 .c 的 ANSI C 程式. \n \n 完成上述可納入練習1 hello.c,利用 Tools -> Go 直接進行存檔並且執行. \n . \n #include <stdio.h>\n \nint main() {\n    printf("Hello, world!\\n");\n    return 0;\n} \n \n 完成以上,可執行下面程式 \n \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n 產生的結果 \n \n \n \n \n', 'tags': '', 'url': '利用 SciTE 編輯器類解譯 ANSI C 程式.html'}]};